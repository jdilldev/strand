{"version":3,"file":"nivo-bullet.es.js","sources":["../src/BulletMarkersItem.tsx","../src/BulletRectsItem.tsx","../src/props.ts","../src/BulletTooltip.tsx","../src/compute.ts","../src/BulletMarkers.tsx","../src/BulletRects.tsx","../src/BulletItem.tsx","../src/Bullet.tsx","../src/hooks.ts","../src/ResponsiveBullet.tsx"],"sourcesContent":["import { BulletMarkersItemProps } from './types'\nimport { animated } from '@react-spring/web'\n\nexport const BulletMarkersItem = ({\n    animatedProps: { color, transform, x, y1, y2 },\n    data,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: BulletMarkersItemProps) => {\n    return (\n        <animated.line\n            transform={transform}\n            x1={x}\n            x2={x}\n            y1={y1}\n            y2={y2}\n            fill=\"none\"\n            stroke={color}\n            strokeWidth=\"5\"\n            onMouseMove={event => onMouseMove(data, event)}\n            onMouseEnter={event => onMouseEnter(data, event)}\n            onMouseLeave={event => onMouseLeave(data, event)}\n            onClick={event => onClick(data, event)}\n        />\n    )\n}\n","import { BulletRectsItemProps } from './types'\nimport { animated, to } from '@react-spring/web'\n\nexport const BulletRectsItem = ({\n    animatedProps: { x, y, width, height, color },\n    borderColor,\n    borderWidth,\n    data,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n}: BulletRectsItemProps) => {\n    return (\n        <animated.rect\n            x={x}\n            y={y}\n            width={to(width, value => Math.max(value, 0))}\n            height={to(height, value => Math.max(value, 0))}\n            fill={color}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            onMouseMove={event => onMouseMove(data, event)}\n            onMouseEnter={event => onMouseEnter(data, event)}\n            onMouseLeave={event => onMouseLeave(data, event)}\n            onClick={event => onClick(data, event)}\n        />\n    )\n}\n","import { BulletMarkersItem } from './BulletMarkersItem'\nimport { BulletRectsItem } from './BulletRectsItem'\nimport { motionDefaultProps, defaultMargin } from '@nivo/core'\nimport { BulletTooltip } from './BulletTooltip'\n\nexport const defaultProps = {\n    layout: 'horizontal',\n    reverse: false,\n    spacing: 30,\n    minValue: 0,\n    maxValue: 'auto',\n    axisPosition: 'after',\n    titlePosition: 'before',\n    titleAlign: 'middle',\n    titleRotation: 0,\n    titleOffsetX: 0,\n    titleOffsetY: 0,\n    rangeComponent: BulletRectsItem,\n    rangeColors: 'seq:cool',\n    measureComponent: BulletRectsItem,\n    measureColors: 'seq:red_purple',\n    markers: [],\n    markerComponent: BulletMarkersItem,\n    markerColors: 'seq:red_purple',\n    rangeBorderWidth: 0,\n    rangeBorderColor: { from: 'color' },\n    measureSize: 0.4,\n    measureBorderWidth: 0,\n    measureBorderColor: { from: 'color' },\n    markerSize: 0.6,\n    isInteractive: true,\n    tooltip: BulletTooltip,\n    animate: motionDefaultProps.animate,\n    motionConfig: motionDefaultProps.config,\n    margin: defaultMargin,\n    role: 'img',\n} as const\n","import { BulletTooltipProps } from './types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nexport const BulletTooltip = ({ color, v0, v1 }: BulletTooltipProps) => {\n    return (\n        <BasicTooltip\n            id={\n                v1 ? (\n                    <span>\n                        <strong>{v0}</strong> to <strong>{v1}</strong>\n                    </span>\n                ) : (\n                    <strong>{v0}</strong>\n                )\n            }\n            enableChip={true}\n            color={color}\n        />\n    )\n}\n","import { BulletItemProps, BulletRectsProps, ComputedRangeDatum } from './types'\n// @ts-ignore\nimport { getColorScale } from '@nivo/core'\n\ntype ComputeRect = Pick<BulletRectsProps, 'layout' | 'reverse' | 'scale' | 'height'>\n\nexport const stackValues = (\n    values: number[],\n    scale: BulletItemProps['scale'],\n    colorScale: ReturnType<getColorScale>,\n    type: 'range' | 'measures',\n    useAverage = false\n) => {\n    const [min, max] = scale.domain()\n    const normalized = [...values, type === 'measures' || values.includes(max) ? 0 : max]\n        .filter(v => v !== 0)\n        .sort((a, b) => a - b)\n\n    return normalized.reduce<ComputedRangeDatum[]>((acc, v1, index) => {\n        const [last] = acc.slice(-1)\n        const v0 = last?.v1 ?? min\n        const sequentialValue = useAverage === true ? v0 + (v1 - v0) / 2 : v1\n\n        return [\n            ...acc,\n            {\n                index,\n                v0,\n                v1,\n                color: colorScale(colorScale.type === 'sequential' ? sequentialValue : index),\n            },\n        ]\n    }, [])\n}\n\nexport const getComputeRect = ({ layout, reverse, scale, height }: ComputeRect) => {\n    if (layout === 'horizontal') {\n        if (reverse === true) {\n            return (d: ComputedRangeDatum) => {\n                const x = scale(d.v1)\n                const w = scale(d.v0) - x\n\n                return { x, y: 0, width: w, height }\n            }\n        }\n\n        return (d: ComputedRangeDatum) => {\n            const x = scale(d.v0)\n            const w = scale(d.v1) - x\n\n            return { x, y: 0, width: w, height }\n        }\n    }\n\n    if (reverse === true) {\n        return (d: ComputedRangeDatum) => {\n            const y = scale(d.v0)\n            const h = scale(d.v1) - y\n\n            return { x: 0, y, width: height, height: h }\n        }\n    }\n\n    return (d: ComputedRangeDatum) => {\n        const y = scale(d.v1)\n        const h = scale(d.v0) - y\n\n        return { x: 0, y, width: height, height: h }\n    }\n}\n\nexport const computeRects = ({\n    data,\n    layout,\n    reverse,\n    scale,\n    height,\n}: Pick<BulletRectsProps, 'data'> & ComputeRect) => {\n    const computeRect = getComputeRect({\n        layout,\n        reverse,\n        scale,\n        height,\n    })\n\n    return data.map(d => ({\n        data: d,\n        ...computeRect(d),\n    }))\n}\n","import { useMemo } from 'react'\nimport * as React from 'react'\nimport { useTransition } from '@react-spring/web'\n// @ts-ignore\nimport { useMotionConfig } from '@nivo/core'\nimport {\n    BulletMarkersProps,\n    ComputedMarkersDatum,\n    MarkerWithPosition,\n    PositionWithColor,\n} from './types'\n\ntype MouseEventWithDatum = (\n    datum: ComputedMarkersDatum,\n    event: React.MouseEvent<SVGLineElement, MouseEvent>\n) => void\n\ntype EventHandlers = Record<'onMouseEnter' | 'onMouseLeave' | 'onClick', MouseEventWithDatum>\n\nconst getPositionGenerator = ({\n    layout,\n    reverse,\n    scale,\n    height,\n    markerSize,\n}: Pick<BulletMarkersProps, 'layout' | 'reverse' | 'scale' | 'height' | 'markerSize'>) => {\n    if (layout === 'horizontal') {\n        return (marker: ComputedMarkersDatum) => {\n            const x = scale(marker.value)\n            const y = height / 2\n            const rotation = reverse === true ? 180 : 0\n\n            return { x, y, size: markerSize, rotation }\n        }\n    }\n\n    return (marker: ComputedMarkersDatum) => {\n        const x = height / 2\n        const y = scale(marker.value)\n        const rotation = reverse === true ? 270 : 90\n\n        return { x, y, size: markerSize, rotation }\n    }\n}\n\nexport const BulletMarkers = ({\n    scale,\n    layout,\n    reverse,\n    markers,\n    height,\n    markerSize,\n    component,\n    onMouseEnter,\n    onMouseLeave,\n    onClick,\n}: BulletMarkersProps & EventHandlers) => {\n    const getPosition = useMemo(\n        () => getPositionGenerator({ layout, reverse, scale, height, markerSize }),\n        [layout, reverse, scale, height, markerSize]\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<MarkerWithPosition, PositionWithColor>(\n        markers.map(marker => ({ ...marker, position: getPosition(marker) })),\n        {\n            keys: marker => `${marker.index}`,\n            enter: ({ color, position }: MarkerWithPosition) => ({\n                color,\n                transform: `rotate(${position.rotation}, ${position.x}, ${position.y})`,\n                x: position.x,\n                y1: position.y - position.size / 2,\n                y2: position.y + position.size / 2,\n            }),\n            update: ({ color, position }: MarkerWithPosition) => ({\n                color,\n                transform: `rotate(${position.rotation}, ${position.x}, ${position.y})`,\n                x: position.x,\n                y1: position.y - position.size / 2,\n                y2: position.y + position.size / 2,\n            }),\n            config: springConfig,\n            immediate: !animate,\n        }\n    )\n\n    return (\n        <>\n            {transition((props, { position, ...marker }) =>\n                React.createElement(component, {\n                    key: marker.index,\n                    ...marker,\n                    ...position,\n                    animatedProps: props,\n                    data: marker,\n                    onMouseEnter,\n                    onMouseMove: onMouseEnter,\n                    onMouseLeave,\n                    onClick,\n                })\n            )}\n        </>\n    )\n}\n","import { createElement, useMemo } from 'react'\nimport { useTransition, animated, to } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { computeRects } from './compute'\nimport { BulletRectsProps, BulletRectComputedRect, BulletRectAnimatedProps } from './types'\nimport { useInheritedColor } from '@nivo/colors'\n\nexport const BulletRects = ({\n    animatedProps,\n    data,\n    layout,\n    y,\n    borderColor,\n    borderWidth,\n    component,\n    reverse,\n    scale,\n    height,\n    onMouseEnter,\n    onMouseLeave,\n    onClick,\n}: BulletRectsProps) => {\n    const rects = useMemo(\n        () =>\n            computeRects({\n                data,\n                layout,\n                reverse,\n                scale,\n                height,\n            }),\n        [data, layout, reverse, scale, height]\n    )\n\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor(borderColor, theme)\n\n    const getTransform = (value: number) =>\n        `translate(${layout === 'horizontal' ? 0 : value},${layout === 'horizontal' ? value : 0})`\n\n    const transform = animatedProps ? to(animatedProps.measuresY, getTransform) : getTransform(y)\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const transition = useTransition<BulletRectComputedRect, BulletRectAnimatedProps>(rects, {\n        keys: rect => `${rect.data.index}`,\n        enter: rect => ({\n            x: rect.x,\n            y: rect.y,\n            width: rect.width,\n            height: rect.height,\n            color: rect.data.color,\n        }),\n        update: rect => ({\n            x: rect.x,\n            y: rect.y,\n            width: rect.width,\n            height: rect.height,\n            color: rect.data.color,\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={transform}>\n            {transition((props, rect) =>\n                createElement(component, {\n                    key: rect.data.index,\n                    index: rect.data.index,\n                    animatedProps: props,\n                    data: rect.data,\n                    x: props.x.get(),\n                    y: props.y.get(),\n                    borderColor: getBorderColor(rect.data),\n                    borderWidth,\n                    width: to(props.width, value => Math.max(value, 0)).get(),\n                    height: to(props.height, value => Math.max(value, 0)).get(),\n                    color: props.color.get(),\n                    onMouseEnter,\n                    onMouseMove: onMouseEnter,\n                    onMouseLeave,\n                    onClick,\n                })\n            )}\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { Axis } from '@nivo/axes'\n// @ts-ignore\nimport { getColorScale, useMotionConfig, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { stackValues } from './compute'\nimport { BulletMarkers } from './BulletMarkers'\nimport { BulletRects } from './BulletRects'\nimport { BulletItemProps } from './types'\n\nexport const BulletItem = ({\n    id,\n\n    scale,\n    layout,\n    reverse,\n    axisPosition,\n    x,\n    y,\n    width,\n    height,\n\n    title = id,\n    titlePosition,\n    titleAlign,\n    titleOffsetX,\n    titleOffsetY,\n    titleRotation,\n    tooltip,\n\n    rangeBorderColor,\n    rangeBorderWidth,\n    rangeComponent,\n    rangeColors,\n    ranges,\n\n    measureBorderColor,\n    measureBorderWidth,\n    measureComponent,\n    measureHeight,\n    measureColors,\n    measures,\n\n    markerComponent,\n    markerColors,\n    markerHeight,\n    markers = [],\n\n    onRangeClick,\n    onMeasureClick,\n    onMarkerClick,\n}: BulletItemProps) => {\n    const theme = useTheme()\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const computedRanges = useMemo(() => {\n        const rangeColorScale = getColorScale(rangeColors, scale, true)\n\n        return stackValues(ranges, scale, rangeColorScale, 'range')\n    }, [rangeColors, ranges, scale])\n\n    const computedMeasures = useMemo(() => {\n        const measureColorScale = getColorScale(measureColors, scale)\n\n        return stackValues(measures, scale, measureColorScale, 'measures')\n    }, [measureColors, measures, scale])\n\n    const computedMarkers = useMemo(() => {\n        const markerColorScale = getColorScale(markerColors, scale)\n\n        return markers.map((marker: number, index: number) => ({\n            value: marker,\n            index,\n            color: markerColorScale(\n                markerColorScale.type === 'sequential' ? marker : index\n            ) as string,\n        }))\n    }, [markerColors, markers, scale])\n\n    const TooltipComponent = tooltip\n\n    const rangeNodes = (\n        <BulletRects\n            data={computedRanges}\n            scale={scale}\n            layout={layout}\n            reverse={reverse}\n            x={0}\n            y={0}\n            width={width}\n            height={height}\n            component={rangeComponent}\n            borderColor={rangeBorderColor}\n            borderWidth={rangeBorderWidth}\n            onMouseEnter={(range, event) => {\n                showTooltipFromEvent(\n                    <TooltipComponent color={range.color} v0={range.v0} v1={range.v1} />,\n                    event\n                )\n            }}\n            onMouseLeave={hideTooltip}\n            onClick={(range, event) => {\n                onRangeClick?.({ id, ...range }, event)\n            }}\n        />\n    )\n\n    const markerNodes = (\n        <BulletMarkers\n            markers={computedMarkers}\n            scale={scale}\n            layout={layout}\n            reverse={reverse}\n            height={height}\n            markerSize={markerHeight}\n            component={markerComponent}\n            onMouseEnter={(marker, event) => {\n                showTooltipFromEvent(\n                    <TooltipComponent color={marker.color} v0={marker.value} />,\n                    event\n                )\n            }}\n            onMouseLeave={hideTooltip}\n            onClick={(marker, event) => {\n                onMarkerClick?.({ id, ...marker }, event)\n            }}\n        />\n    )\n\n    const axisX = layout === 'vertical' && axisPosition === 'after' ? height : 0\n    const axisY = layout === 'horizontal' && axisPosition === 'after' ? height : 0\n\n    const axis = (\n        <g transform={`translate(${axisX},${axisY})`}>\n            <Axis\n                axis={layout === 'horizontal' ? 'x' : 'y'}\n                length={layout === 'horizontal' ? width : height}\n                scale={scale}\n                ticksPosition={axisPosition}\n            />\n        </g>\n    )\n\n    const titleX =\n        layout === 'horizontal'\n            ? titlePosition === 'before'\n                ? titleOffsetX\n                : width + titleOffsetX\n            : height / 2 + titleOffsetX\n    const titleY =\n        layout === 'horizontal'\n            ? height / 2 + titleOffsetY\n            : titlePosition === 'before'\n            ? titleOffsetY\n            : width + titleOffsetY\n\n    const titleNode = (\n        <g transform={`translate(${titleX},${titleY}) rotate(${titleRotation})`}>\n            {typeof title === 'string' ? (\n                <text\n                    style={{\n                        ...theme?.labels?.text,\n                        dominantBaseline: 'central',\n                        textAnchor: titleAlign,\n                    }}\n                >\n                    {title}\n                </text>\n            ) : (\n                title\n            )}\n        </g>\n    )\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        measuresY: (height - measureHeight) / 2,\n        transform: `translate(${x},${y})`,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            {rangeNodes}\n            <BulletRects\n                animatedProps={animatedProps}\n                data={computedMeasures}\n                scale={scale}\n                layout={layout}\n                reverse={reverse}\n                x={0}\n                y={0}\n                width={width}\n                height={measureHeight}\n                component={measureComponent}\n                borderColor={measureBorderColor}\n                borderWidth={measureBorderWidth}\n                onMouseEnter={(measure, event) => {\n                    showTooltipFromEvent(\n                        <TooltipComponent color={measure.color} v0={measure.v1} />,\n                        event\n                    )\n                }}\n                onMouseLeave={hideTooltip}\n                onClick={(measure, event) => {\n                    onMeasureClick?.({ id, ...measure }, event)\n                }}\n            />\n            {axis}\n            {markerNodes}\n            {titleNode}\n        </animated.g>\n    )\n}\n","import { Container, SvgWrapper, useDimensions } from '@nivo/core'\nimport { defaultProps } from './props'\nimport { BulletSvgProps } from './types'\nimport { BulletItem } from './BulletItem'\nimport { useEnhancedData } from './hooks'\n\nexport const Bullet = (props: BulletSvgProps) => {\n    const {\n        data,\n\n        layout,\n        spacing,\n        measureSize,\n        markerSize,\n        reverse,\n        axisPosition,\n\n        minValue,\n        maxValue,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        titlePosition,\n        titleAlign,\n        titleOffsetX,\n        titleOffsetY,\n        titleRotation,\n\n        rangeBorderColor,\n        rangeBorderWidth,\n        rangeComponent,\n        rangeColors,\n\n        measureBorderColor,\n        measureBorderWidth,\n        measureComponent,\n        measureColors,\n\n        markerComponent,\n        markerColors,\n\n        theme,\n        tooltip = defaultProps.tooltip,\n\n        animate,\n        motionConfig,\n\n        isInteractive,\n        onRangeClick,\n        onMeasureClick,\n        onMarkerClick,\n\n        role,\n    } = { ...defaultProps, ...props }\n\n    const { margin, innerWidth, innerHeight } = useDimensions(width, height, partialMargin)\n\n    const itemHeight =\n        layout === 'horizontal'\n            ? (innerHeight - spacing * (data.length - 1)) / data.length\n            : (innerWidth - spacing * (data.length - 1)) / data.length\n\n    const measureHeight = itemHeight * measureSize\n    const markerHeight = itemHeight * markerSize\n\n    const enhancedData = useEnhancedData(data, {\n        height: innerHeight,\n        layout,\n        maxValue: maxValue === 'auto' ? undefined : maxValue,\n        minValue: minValue === 'auto' ? undefined : minValue,\n        reverse,\n        width: innerWidth,\n    })\n\n    return (\n        <Container\n            isInteractive={isInteractive}\n            theme={theme}\n            animate={animate}\n            motionConfig={motionConfig}\n        >\n            <SvgWrapper width={width} height={height} margin={margin} role={role}>\n                {enhancedData.map((d, i) => (\n                    <BulletItem\n                        key={d.id}\n                        {...d}\n                        layout={layout}\n                        reverse={reverse}\n                        x={layout === 'vertical' ? itemHeight * i + spacing * i : 0}\n                        y={layout === 'horizontal' ? itemHeight * i + spacing * i : 0}\n                        width={innerWidth}\n                        height={itemHeight}\n                        titlePosition={titlePosition}\n                        titleAlign={titleAlign}\n                        titleOffsetX={titleOffsetX}\n                        titleOffsetY={titleOffsetY}\n                        titleRotation={titleRotation}\n                        measureHeight={measureHeight}\n                        markerHeight={markerHeight}\n                        rangeBorderColor={rangeBorderColor}\n                        rangeBorderWidth={rangeBorderWidth}\n                        rangeComponent={rangeComponent}\n                        rangeColors={rangeColors}\n                        measureBorderColor={measureBorderColor}\n                        measureBorderWidth={measureBorderWidth}\n                        measureComponent={measureComponent}\n                        measureColors={measureColors}\n                        markerComponent={markerComponent}\n                        markerColors={markerColors}\n                        axisPosition={axisPosition}\n                        onRangeClick={onRangeClick}\n                        onMeasureClick={onMeasureClick}\n                        onMarkerClick={onMarkerClick}\n                        tooltip={tooltip}\n                    />\n                ))}\n            </SvgWrapper>\n        </Container>\n    )\n}\n","import { createLinearScale } from '@nivo/scales'\nimport { useMemo } from 'react'\nimport { Datum, CommonBulletProps } from './types'\n\nexport const useEnhancedData = (\n    data: Datum[],\n    {\n        layout,\n        maxValue,\n        minValue,\n        reverse,\n        height,\n        width,\n    }: Pick<CommonBulletProps, 'layout' | 'reverse' | 'height' | 'width'> &\n        Record<'maxValue' | 'minValue', number | undefined>\n) => {\n    return useMemo(\n        () =>\n            data.map(d => {\n                const all = [...d.ranges, ...d.measures, ...(d.markers ?? [])]\n                const max = maxValue ?? Math.max(...all)\n                const min = minValue ?? Math.min(...all)\n\n                const scale = createLinearScale(\n                    { clamp: true, min, max, type: 'linear' },\n                    { all, max, min },\n                    layout === 'horizontal' ? width : height,\n                    layout === 'horizontal' ? (reverse ? 'y' : 'x') : reverse ? 'x' : 'y'\n                )\n\n                return {\n                    ...d,\n                    scale,\n                }\n            }),\n        [data, height, layout, maxValue, minValue, reverse, width]\n    )\n}\n","import { ResponsiveWrapper, Dimensions } from '@nivo/core'\nimport { BulletSvgProps } from './types'\nimport { Bullet } from './Bullet'\n\nexport const ResponsiveBullet = (props: Omit<BulletSvgProps, 'height' | 'width'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }: Dimensions) => <Bullet width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["BulletRectsItem","animatedProps","x","y","width","height","color","borderColor","borderWidth","data","onMouseEnter","onMouseMove","onMouseLeave","onClick","_jsx","animated","rect","to","value","Math","max","fill","strokeWidth","stroke","event","defaultProps","layout","reverse","spacing","minValue","maxValue","axisPosition","titlePosition","titleAlign","titleRotation","titleOffsetX","titleOffsetY","rangeComponent","rangeColors","measureComponent","measureColors","markers","markerComponent","transform","y1","y2","line","x1","x2","markerColors","rangeBorderWidth","rangeBorderColor","from","measureSize","measureBorderWidth","measureBorderColor","markerSize","isInteractive","tooltip","v0","v1","BasicTooltip","id","_jsxs","enableChip","animate","motionDefaultProps","motionConfig","config","margin","defaultMargin","role","stackValues","values","scale","colorScale","type","useAverage","domain","min","includes","filter","v","sort","a","b","reduce","acc","index","last","slice","sequentialValue","BulletMarkers","component","getPosition","useMemo","marker","size","rotation","getPositionGenerator","useMotionConfig","springConfig","transition","useTransition","map","position","keys","enter","update","immediate","props","React","createElement","key","BulletRects","rects","computeRect","d","h","getComputeRect","computeRects","theme","useTheme","getBorderColor","useInheritedColor","getTransform","measuresY","g","get","BulletItem","title","ranges","measureHeight","measures","markerHeight","onRangeClick","onMeasureClick","onMarkerClick","useTooltip","showTooltipFromEvent","hideTooltip","computedRanges","rangeColorScale","getColorScale","computedMeasures","measureColorScale","computedMarkers","markerColorScale","TooltipComponent","rangeNodes","range","markerNodes","axis","Axis","length","ticksPosition","titleNode","style","labels","_theme$labels","text","dominantBaseline","textAnchor","useSpring","measure","Bullet","partialMargin","useDimensions","innerWidth","innerHeight","itemHeight","enhancedData","all","createLinearScale","clamp","useEnhancedData","undefined","Container","SvgWrapper","i","ResponsiveBullet","ResponsiveWrapper"],"mappings":"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"}